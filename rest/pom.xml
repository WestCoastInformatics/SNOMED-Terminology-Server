<?xml version="1.0"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <!-- Module Metadata -->
  <parent>
    <groupId>org.ihtsdo.otf.term-server</groupId>
    <artifactId>term-server-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <relativePath>../parent</relativePath>
  </parent>

  <artifactId>term-server-rest</artifactId>
  <packaging>war</packaging>
  <name>Terminology server REST implementations.</name>
  <description>Public facing API for rest services.</description>

  <properties>
    <!-- Specify default build.config - references config project -->
    <!-- This requires some images to be in c:/data/images -->
    <!-- Used -->
    <build.config>${basedir}/../config/src/main/resources/config.properties.dev</build.config>
  </properties>

  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- Model interfaces. -->
    <dependency>
      <groupId>org.ihtsdo.otf.term-server</groupId>
      <artifactId>term-server-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.ihtsdo.otf.term-server</groupId>
      <artifactId>term-server-jpa-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.ihtsdo.otf.term-server</groupId>
      <artifactId>term-server-services</artifactId>
    </dependency>
    <dependency>
      <groupId>org.ihtsdo.otf.term-server</groupId>
      <artifactId>term-server-jpa-services</artifactId>
    </dependency>

    <!-- JPA dependencies -->
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-envers</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-search</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>

    <!-- Required for Jersey and JSON -->
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-multipart</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>jsr311-api</artifactId>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
    </dependency>
    <dependency>
      <groupId>com.wordnik</groupId>
      <artifactId>swagger-jersey-jaxrs_2.10</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
    </dependency>
  </dependencies>

  <!-- Always build, use dev configuration by default -->
  <build>

    <plugins>

      <!-- Configure environment-specific build time information through a build.config 
        file settings -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>${build.config}</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>

     <!-- Copy files -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>

          <!-- Copy the favicon file -->
          <execution>
            <id>copy-favicon</id>
            <phase>process-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="copy favicon">
                <copy file="${deploy.favicon}" overwrite="true"
                  tofile="${project.build.directory}/custom/images/favicon.png" />
              </target>
            </configuration>
          </execution>

          <!-- Copy the logo file -->
          <execution>
            <id>copy-logo</id>
            <phase>process-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="copy logo">
                <copy file="${deploy.favicon}" overwrite="true"
                  tofile="${project.build.directory}/custom/images/logo.png" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Configure .war settings -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <warName>term-server-rest</warName>
          <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
          <webResources>
            <resource>
              <directory>${project.build.directory}/custom</directory>
            </resource>
            <resource>
              <directory>src/main/webapp</directory>
              <filtering>true</filtering>
              <includes>
                <include>index.html</include>
              </includes>
            </resource>
            <resource>
              <directory>src/main/webapp</directory>
              <filtering>false</filtering>
              <excludes>
                <exclude>index.html</exclude>
              </excludes>
            </resource>
          </webResources>

        </configuration>
      </plugin>
    </plugins>

  </build>
</project>
